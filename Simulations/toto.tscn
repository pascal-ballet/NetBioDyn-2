[gd_scene load_steps=12 format=2]

[sub_resource type="GDScript" id=1]
script/source = "
extends Node

# Reaction
func action(tree, R1) -> void:
	var proba:float = 100
	var alea:float = rand_range(0,100)
	#print_debug(str(\"alea=\", alea, \", proba=\", proba))
	if alea < proba:
		#print (str(\"proba ok:\",proba))
		if R1.is_queued_for_deletion() == false && (R1.get_meta(\"Name\") == \"\" || R1.is_in_group(\"\")   ): # R1 n'est pas déjà détruit et il appartient au bon groupe:
			#var R1:Spatial 		= collision[0]
			var nb_agents:int 	= R1.get_parent().get_child_count()
			#print (\"nb=\", nb_agents)
			#print(\"R1 is in gp : \", inputs[2])
			# Cas avec R2 == 0 ########################################################################################
			if \"0\" == \"0\": # Pas de 2nd réactif => toujours appliqué (à la proba précédente près)
				# si R1 CHANGE en P1 (il n'est ni enlevé, ni prolongé, il est donc remplacé par P1)
				if \"0\" != \"0\" && \"0\" != \"R1\" && \"0\" != \"R2\":
					#var P1 = null # et P1 peut être soit un nouvel agent soit du même type que R2 - Mais bon ici r2 = \"0\" donc ok pas de R2 qui compte
					#print_debug(\"spawn P1...\")
					NetBioDyn2gui.spawn_agent(tree,\"0\", Vector3(R1.translation.x,R1.translation.y,R1.translation.z) ) #load(str(\"res://SimBioCell/3-PreFabAgents/\",p1,\".tscn\")).instance()
					R1.queue_free()
				# si R1 est ENLEVE (il est enlevé ou bien il MIME R2 mais qui vaut \"0\" aussi)
				if R1.is_queued_for_deletion() == false && \"0\" == \"0\" || \"0\" == \"R2\":
					R1.queue_free()
				# si P2 APPARAIT (je rappelle qu'ici R2 = 0)
				if \"0\" != \"0\" && \"0\" != \"R1\" && \"0\" != \"R2\" && nb_agents < tree.MAX_AGENTS: # si R2 n'est ni enlevé, ni prolongé, il est donc remplacé par P2
					NetBioDyn2gui.spawn_agent(tree,\"0\", Vector3(R1.translation.x,R1.translation.y,R1.translation.z) ) #load(str(\"res://SimBioCell/3-PreFabAgents/\",p2,\".tscn\")).instance()
				# si P2 MIME R1 il APPARAIT du meme type que R1
				if \"0\" == \"R1\" && nb_agents < tree.MAX_AGENTS: # si R2 n'est ni enlevé, ni prolongé, il est donc remplacé par P2
					var P2 = R1.duplicate(8) # load(str(\"res://SimBioCell/3-PreFabAgents/\",p2,\".tscn\")).instance()
					P2.global_translate(Vector3(R1.translation.x,R1.translation.y,R1.translation.z))
					R1.get_parent().add_child(P2)
				# si P3 APPARAIT
				if \"0\" != \"0\" && \"0\" != \"R1\" && \"0\" != \"R2\" && nb_agents < tree.MAX_AGENTS: # P3 apparait
					NetBioDyn2gui.spawn_agent(tree,\"0\", Vector3(R1.translation.x,R1.translation.y,R1.translation.z) )
				return
			# Cas avec un 2nd réactif ########################################################################################
			var bodies = R1.get_colliding_bodies()
			if bodies.size() > 0:
				#print(str(\"collision size:\",bodies.size() ))
				#print(\"R1 is colliding\")
				var R2 = bodies[0]
				#print( str( \"List R1 : \", R1.get_meta_list()    ) )
				#print( str( \"List R2 : \", R2.get_meta_list()    ) )
				#print( str(\"R2.get_meta(Name) : \",  R2.get_meta(\"Name\")   ) )
				if R2 is RigidBody && R2.is_queued_for_deletion() == false && (R2.get_meta(\"Name\") == \"0\" || R2.is_in_group(\"0\")): # R2 n'est pas détruit et appartient au bon groupe
					#print( \"R2=>P2\" )
					# R1 CHANGE en p1
					if R1.is_queued_for_deletion() == false && \"0\" != \"0\" && \"0\" != \"R1\" && \"0\" != \"R2\": # si R1 n'est ni enlevé, ni prolongé, il est donc remplacé par P1
						NetBioDyn2gui.spawn_agent(tree,\"0\", Vector3(R1.translation.x,R1.translation.y,R1.translation.z) ) #load(str(\"res://SimBioCell/3-PreFabAgents/\",p1,\".tscn\")).instance()
						R1.queue_free()
					# R1 est ENLEVE
					if R1.is_queued_for_deletion() == false && \"0\" == \"0\": # si R1 n'est pas prolongé, il est enlevé (càd soit enlevé soit remplacé)
						R1.queue_free()
					# R1/P1 MIME R2
					if R1.is_queued_for_deletion() == false && \"0\" == \"R2\": # si R1 devient P1 mais du meme type que R2
						var P1 = R2.duplicate(8) # load(str(\"res://SimBioCell/3-PreFabAgents/\",p1,\".tscn\")).instance()
						P1.global_translate(Vector3(R1.translation.x,R1.translation.y,R1.translation.z))
						R1.get_parent().add_child(P1)
						R1.queue_free()
					# R2 CHANGE en p2
					if R2.is_queued_for_deletion() == false && \"0\" != \"0\" && \"0\" != \"R1\" && \"0\" != \"R2\" && nb_agents < tree.MAX_AGENTS: # si R2 n'est ni enlevé, ni prolongé, il est donc remplacé par P2
						NetBioDyn2gui.spawn_agent(tree,\"0\", Vector3(R2.translation.x,R2.translation.y,R2.translation.z) ) #load(str(\"res://SimBioCell/3-PreFabAgents/\",p2,\".tscn\")).instance()
						R2.queue_free()
					# R2 est ENLEVE
					if R2.is_queued_for_deletion() == false && \"0\" == \"0\": # si R2 est enlevé tout simplement
						R2.queue_free()
					# R1/P1 MIME R2
					if R2.is_queued_for_deletion() == false && \"0\" == \"R1\": # si R2 devient P2 mais du meme type que R1
						var P2 = R1.duplicate(8) # load(str(\"res://SimBioCell/3-PreFabAgents/\",p1,\".tscn\")).instance()
						P2.global_translate(Vector3(R2.translation.x,R2.translation.y,R2.translation.z))
						R1.get_parent().add_child(P2)
						R2.queue_free()
					# si P3 APPARAIT
					if \"0\" != \"0\" && \"0\" != \"R1\" && \"0\" != \"R2\" && nb_agents < tree.MAX_AGENTS: # P3 apparait
						NetBioDyn2gui.spawn_agent(tree,\"0\", Vector3(R1.translation.x,R1.translation.y,R1.translation.z) )

					return

"

[sub_resource type="Image" id=2]
data = {
"data": PoolByteArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 0, 0, 0, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ),
"format": "LumAlpha8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id=3]
flags = 4
flags = 4
image = SubResource( 2 )
size = Vector2( 16, 16 )

[sub_resource type="Image" id=4]
data = {
"data": PoolByteArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 86, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 225, 86, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 230, 20, 224, 233, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 20, 224, 233, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 224, 170, 224, 255, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 170, 224, 255, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ),
"format": "LumAlpha8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id=5]
flags = 4
flags = 4
image = SubResource( 4 )
size = Vector2( 16, 16 )

[sub_resource type="Image" id=6]
data = {
"data": PoolByteArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 0, 0, 0, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 255, 224, 255, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ),
"format": "LumAlpha8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id=7]
flags = 4
flags = 4
image = SubResource( 6 )
size = Vector2( 16, 16 )

[sub_resource type="Image" id=8]
data = {
"data": PoolByteArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 29, 255, 132, 132, 172, 255, 132, 132, 242, 255, 132, 132, 242, 255, 133, 133, 175, 255, 131, 131, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 29, 255, 132, 132, 237, 255, 132, 132, 255, 255, 132, 132, 255, 255, 132, 132, 255, 255, 132, 132, 255, 255, 132, 132, 238, 255, 132, 132, 29, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 172, 255, 132, 132, 255, 255, 132, 132, 180, 255, 132, 132, 27, 255, 128, 128, 28, 255, 132, 132, 182, 255, 132, 132, 255, 255, 132, 132, 170, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 242, 255, 132, 132, 255, 255, 128, 128, 28, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 29, 255, 132, 132, 255, 255, 132, 132, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 255, 255, 132, 132, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 255, 255, 132, 132, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 255, 255, 132, 132, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 132, 132, 255, 255, 132, 132, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 243, 243, 243, 255, 243, 243, 243, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id=9]
flags = 4
flags = 4
image = SubResource( 8 )
size = Vector2( 16, 16 )

[sub_resource type="Image" id=10]
data = {
"data": PoolByteArray( 222, 222, 222, 70, 223, 223, 223, 112, 230, 230, 230, 10, 255, 148, 148, 95, 255, 150, 150, 187, 255, 149, 149, 186, 255, 149, 149, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 230, 230, 10, 223, 223, 223, 112, 224, 224, 224, 75, 225, 225, 225, 159, 224, 224, 224, 255, 234, 200, 200, 60, 255, 149, 149, 232, 255, 149, 149, 234, 255, 149, 149, 234, 255, 149, 149, 232, 255, 156, 156, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 230, 230, 10, 224, 224, 224, 114, 224, 224, 224, 232, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 255, 156, 156, 49, 255, 149, 149, 234, 255, 149, 149, 234, 255, 149, 149, 234, 255, 149, 149, 234, 247, 166, 166, 60, 223, 223, 223, 153, 223, 223, 223, 153, 224, 224, 224, 155, 224, 224, 224, 232, 224, 224, 224, 232, 224, 224, 224, 114, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 255, 128, 128, 6, 255, 149, 149, 214, 255, 149, 149, 234, 255, 149, 149, 234, 255, 150, 150, 213, 226, 204, 204, 35, 223, 223, 223, 153, 223, 223, 223, 153, 224, 224, 224, 255, 225, 225, 225, 152, 230, 230, 230, 10, 0, 0, 0, 0, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 227, 227, 227, 9, 255, 149, 149, 72, 255, 149, 149, 233, 255, 149, 149, 233, 255, 149, 149, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 255, 223, 223, 223, 96, 0, 0, 0, 0, 227, 227, 227, 9, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 224, 224, 224, 230, 223, 223, 223, 95, 255, 149, 149, 106, 255, 149, 149, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 255, 223, 223, 223, 105, 225, 225, 225, 111, 224, 224, 224, 230, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 224, 224, 224, 131, 224, 224, 224, 241, 224, 224, 224, 116, 224, 224, 224, 98, 224, 224, 224, 170, 224, 224, 224, 170, 224, 224, 224, 170, 224, 224, 224, 170, 224, 224, 224, 255, 224, 224, 224, 251, 224, 224, 224, 241, 224, 224, 224, 131, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 0, 0, 0, 0, 227, 227, 227, 18, 224, 224, 224, 163, 224, 224, 224, 255, 224, 224, 224, 187, 224, 224, 224, 187, 224, 224, 224, 187, 224, 224, 224, 187, 224, 224, 224, 255, 224, 224, 224, 163, 227, 227, 227, 18, 0, 0, 0, 0, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 227, 227, 227, 9, 0, 0, 0, 0, 223, 223, 223, 96, 224, 224, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 255, 223, 223, 223, 96, 0, 0, 0, 0, 227, 227, 227, 9, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 224, 224, 224, 234, 225, 225, 225, 119, 223, 223, 223, 105, 224, 224, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 255, 225, 225, 225, 102, 225, 225, 225, 102, 224, 224, 224, 228, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 225, 225, 225, 135, 224, 224, 224, 243, 224, 224, 224, 251, 224, 224, 224, 255, 224, 224, 224, 170, 224, 224, 224, 170, 224, 224, 224, 170, 224, 224, 224, 170, 224, 224, 224, 255, 224, 224, 224, 251, 224, 224, 224, 243, 225, 225, 225, 135, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 0, 0, 0, 0, 230, 230, 230, 20, 224, 224, 224, 165, 224, 224, 224, 255, 224, 224, 224, 187, 224, 224, 224, 187, 224, 224, 224, 187, 224, 224, 224, 187, 224, 224, 224, 255, 224, 224, 224, 165, 230, 230, 230, 20, 0, 0, 0, 0, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 159, 224, 224, 224, 255, 230, 230, 230, 10, 0, 0, 0, 0, 223, 223, 223, 96, 224, 224, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 255, 223, 223, 223, 96, 0, 0, 0, 0, 230, 230, 230, 10, 224, 224, 224, 255, 225, 225, 225, 159, 225, 225, 225, 77, 224, 224, 224, 232, 224, 224, 224, 232, 224, 224, 224, 114, 224, 224, 224, 106, 224, 224, 224, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 255, 224, 224, 224, 106, 224, 224, 224, 114, 224, 224, 224, 232, 224, 224, 224, 232, 225, 225, 225, 77, 0, 0, 0, 0, 230, 230, 230, 10, 224, 224, 224, 114, 224, 224, 224, 232, 224, 224, 224, 252, 224, 224, 224, 255, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 153, 224, 224, 224, 255, 224, 224, 224, 252, 224, 224, 224, 232, 224, 224, 224, 114, 230, 230, 230, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 230, 230, 230, 10, 223, 223, 223, 112, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 153, 223, 223, 223, 112, 230, 230, 230, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ),
"format": "RGBA8",
"height": 16,
"mipmaps": false,
"width": 16
}

[sub_resource type="ImageTexture" id=11]
flags = 4
flags = 4
image = SubResource( 10 )
size = Vector2( 16, 16 )

[node name="Simulator" type="Spatial"]

[node name="Entities" type="Node" parent="."]

[node name="Behaviors" type="Node" parent="."]

[node name="186" type="Node" parent="Behaviors"]
script = SubResource( 1 )
__meta__ = {
"Name": "Réaction",
"P1": "0",
"P2": "0",
"P3": "0",
"R1": "",
"R2": "0",
"Type": "Reaction",
"p": "100"
}

[node name="GraphGeneric203" type="GraphEdit" parent="Behaviors/186"]
unique_name_in_owner = true
visible = false
margin_top = 70.0
margin_right = 1008.0
margin_bottom = 548.0
rect_pivot_offset = Vector2( 164, 105 )
size_flags_horizontal = 3
size_flags_vertical = 3
scroll_offset = Vector2( 0, -158 )
zoom_min = 1.0
zoom_max = 1.0
minimap_enabled = false

[node name="GraphNodeThen" type="GraphNode" parent="Behaviors/186/GraphGeneric203"]
margin_left = 150.0
margin_top = 158.0
margin_right = 279.0
margin_bottom = 220.0
mouse_filter = 1
title = "Alors"
offset = Vector2( 150, 0 )
overlay = 1
slot/0/left_enabled = true
slot/0/left_type = 0
slot/0/left_color = Color( 0, 0.564706, 0.27451, 1 )
slot/0/right_enabled = true
slot/0/right_type = 1
slot/0/right_color = Color( 0.235294, 0.529412, 0.988235, 1 )

[node name="Label" type="Label" parent="Behaviors/186/GraphGeneric203/GraphNodeThen"]
margin_left = 16.0
margin_top = 24.0
margin_right = 113.0
margin_bottom = 38.0
text = ">          >"
align = 1

[node name="GraphNodeEnd" type="GraphNode" parent="Behaviors/186/GraphGeneric203"]
margin_left = 440.0
margin_top = 158.0
margin_right = 546.0
margin_bottom = 236.0
mouse_filter = 1
title = "Fin"
offset = Vector2( 440, 0 )
selected = true
overlay = 1
slot/0/left_enabled = true
slot/0/left_type = 1
slot/0/left_color = Color( 0.235294, 0.529412, 0.988235, 1 )
slot/0/right_enabled = false
slot/0/right_type = 0
slot/0/right_color = Color( 1, 1, 1, 1 )

[node name="Label" type="Label" parent="Behaviors/186/GraphGeneric203/GraphNodeEnd"]
margin_left = 16.0
margin_top = 24.0
margin_right = 90.0
margin_bottom = 72.0
text = "
|
"

[node name="CdtAND" type="GraphNode" parent="Behaviors/186/GraphGeneric203"]
unique_name_in_owner = true
margin_top = 158.0
margin_right = 62.0
margin_bottom = 217.0
mouse_filter = 1
title = "ET    "
slot/0/left_enabled = true
slot/0/left_type = 0
slot/0/left_color = Color( 0, 0.564706, 0.27451, 1 )
slot/0/right_enabled = true
slot/0/right_type = 0
slot/0/right_color = Color( 0, 0.564706, 0.27451, 1 )
slot/1/left_enabled = true
slot/1/left_type = 0
slot/1/left_color = Color( 0, 0.564706, 0.27451, 1 )
slot/1/right_enabled = false
slot/1/right_type = 0
slot/1/right_color = Color( 1, 1, 1, 1 )

[node name="Label" type="Label" parent="Behaviors/186/GraphGeneric203/CdtAND"]
margin_left = 16.0
margin_top = 24.0
margin_right = 46.0
margin_bottom = 38.0

[node name="Label2" type="Label" parent="Behaviors/186/GraphGeneric203/CdtAND"]
margin_left = 16.0
margin_top = 39.0
margin_right = 46.0
margin_bottom = 53.0

[node name="@@310" type="GraphEditFilter" parent="Behaviors/186/GraphGeneric203"]
_import_path = NodePath("")
pause_mode = 0
physics_interpolation_mode = 0
unique_name_in_owner = false
process_priority = 0
visible = true
modulate = Color( 1, 1, 1, 1 )
self_modulate = Color( 1, 1, 1, 1 )
show_behind_parent = false
light_mask = 1
material = null
use_parent_material = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 0.0
margin_top = 0.0
margin_right = 0.0
margin_bottom = 0.0
grow_horizontal = 1
grow_vertical = 1
rect_min_size = Vector2( 0, 0 )
rect_rotation = 0.0
rect_scale = Vector2( 1, 1 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
hint_tooltip = ""
focus_neighbour_left = NodePath("")
focus_neighbour_top = NodePath("")
focus_neighbour_right = NodePath("")
focus_neighbour_bottom = NodePath("")
focus_next = NodePath("")
focus_previous = NodePath("")
focus_mode = 0
mouse_filter = 1
mouse_default_cursor_shape = 0
input_pass_on_modal_close_click = true
size_flags_horizontal = 1
size_flags_vertical = 1
size_flags_stretch_ratio = 1.0
theme = null
theme_type_variation = ""
script = null

[node name="_h_scroll" type="HScrollBar" parent="Behaviors/186/GraphGeneric203/@@310"]
anchor_right = 1.0
margin_right = -12.0
min_value = -1008.0
max_value = 1008.0
page = 1008.0

[node name="_v_scroll" type="VScrollBar" parent="Behaviors/186/GraphGeneric203/@@310"]
anchor_bottom = 1.0
margin_bottom = -12.0
min_value = -478.0
max_value = 478.0
page = 478.0
value = -158.0

[node name="@@312" type="HBoxContainer" parent="Behaviors/186/GraphGeneric203/@@310"]
margin_left = 10.0
margin_top = 10.0
margin_right = 10.0
margin_bottom = 10.0

[node name="@@313" type="Label" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
visible = false
rect_min_size = Vector2( 48, 0 )
text = "100%"
align = 1

[node name="@@314" type="ToolButton" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
hint_tooltip = "Zoom Out"
focus_mode = 0
icon = SubResource( 3 )

[node name="@@315" type="ToolButton" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
hint_tooltip = "Zoom Reset"
focus_mode = 0
icon = SubResource( 5 )

[node name="@@316" type="ToolButton" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
hint_tooltip = "Zoom In"
focus_mode = 0
icon = SubResource( 7 )

[node name="@@317" type="ToolButton" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
hint_tooltip = "Enable snap and show grid."
focus_mode = 0
toggle_mode = true
pressed = true
icon = SubResource( 9 )

[node name="@@323" type="SpinBox" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
min_value = 5.0
value = 20.0

[node name="@@321" type="LineEdit" parent="Behaviors/186/GraphGeneric203/@@310/@@312/@@323"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1

[node name="@@318" type="Timer" parent="Behaviors/186/GraphGeneric203/@@310/@@312/@@323/@@321"]
wait_time = 0.65

[node name="@@320" type="PopupMenu" parent="Behaviors/186/GraphGeneric203/@@310/@@312/@@323/@@321"]
items = [ "Cut", null, 0, false, false, 0, 134217816, null, "", false, "Copy", null, 0, false, false, 1, 134217795, null, "", false, "Paste", null, 0, false, false, 2, 134217814, null, "", false, "", null, 0, false, false, -1, 0, null, "", true, "Select All", null, 0, false, false, 4, 134217793, null, "", false, "Clear", null, 0, false, false, 3, 0, null, "", false, "", null, 0, false, false, -1, 0, null, "", true, "Undo", null, 0, false, false, 5, 134217818, null, "", false, "Redo", null, 0, false, false, 6, 167772250, null, "", false ]

[node name="@@319" type="Timer" parent="Behaviors/186/GraphGeneric203/@@310/@@312/@@323/@@321/@@320"]
wait_time = 0.3
one_shot = true

[node name="@@322" type="Timer" parent="Behaviors/186/GraphGeneric203/@@310/@@312/@@323"]

[node name="@@324" type="Button" parent="Behaviors/186/GraphGeneric203/@@310/@@312"]
hint_tooltip = "Enable grid minimap."
focus_mode = 0
toggle_mode = true
icon = SubResource( 11 )
flat = true

[node name="_minimap" type="GraphEditMinimap" parent="Behaviors/186/GraphGeneric203/@@310"]
_import_path = NodePath("")
pause_mode = 0
physics_interpolation_mode = 0
unique_name_in_owner = false
process_priority = 0
visible = false
modulate = Color( 1, 1, 1, 0.65 )
self_modulate = Color( 1, 1, 1, 1 )
show_behind_parent = false
light_mask = 1
material = null
use_parent_material = false
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -252.0
margin_top = -172.0
margin_right = -12.0
margin_bottom = -12.0
grow_horizontal = 1
grow_vertical = 1
rect_min_size = Vector2( 50, 50 )
rect_rotation = 0.0
rect_scale = Vector2( 1, 1 )
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
hint_tooltip = ""
focus_neighbour_left = NodePath("")
focus_neighbour_top = NodePath("")
focus_neighbour_right = NodePath("")
focus_neighbour_bottom = NodePath("")
focus_next = NodePath("")
focus_previous = NodePath("")
focus_mode = 0
mouse_filter = 1
mouse_default_cursor_shape = 0
input_pass_on_modal_close_click = true
size_flags_horizontal = 1
size_flags_vertical = 1
size_flags_stretch_ratio = 1.0
theme = null
theme_type_variation = ""
script = null

[node name="CLAYER" type="Control" parent="Behaviors/186/GraphGeneric203"]
mouse_filter = 2

[node name="Groups" type="Node" parent="."]

[node name="Grids" type="Node" parent="."]

[node name="Environment" type="Node" parent="."]
